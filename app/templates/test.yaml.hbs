apiVersion: v1
kind: Service
metadata:
  name: helloworld1
  namespace: kong
spec:
  type: NodePort
  ports:
  - port: 80
    name: http
    targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: helloworld1
  namespace: kong
spec:
  containers:
  - image: tutum/hello-world
    name: helloworld
    ports:
    - containerPort: 80
      name: http
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: {{ helloworld_hostname1 }}
    konghq.com/plugins: cors,oidc
    kubernetes.io/ingress.class: kong
  name: helloworld-ingress1
  namespace: kong
spec:
  rules:
  - host: {{ helloworld_hostname1 }}
    http:
      paths:
      - backend:
          serviceName: helloworld1
          servicePort: 80
        path: /
  tls:
  - hosts:
    - {{ helloworld_hostname1 }}
    secretName: {{ helloworld_hostname1 }}
---
apiVersion: v1
kind: Service
metadata:
  name: helloworld2
  namespace: kong
spec:
  type: NodePort
  ports:
  - port: 80
    name: http
    targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: helloworld2
  namespace: kong
spec:
  containers:
  - image: jimbojangles/jessica:v1
    name: helloworld
    ports:
    - containerPort: 80
      name: http
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: {{ helloworld_hostname2 }}
    konghq.com/plugins: cors,oidc
    kubernetes.io/ingress.class: kong
  name: helloworld-ingress2
  namespace: kong
spec:
  rules:
  - host: {{ helloworld_hostname2 }}
    http:
      paths:
      - backend:
          serviceName: helloworld2
          servicePort: 80
        path: /
  tls:
  - hosts:
    - {{ helloworld_hostname2 }}
    secretName: {{ helloworld_hostname2 }}
